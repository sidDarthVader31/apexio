syntax = "proto3";
package logging;
option go_package = "source_grpc/proto";
message LogInfo {
  uint64 id = 1;
  uint64 timestamp = 2;
  string logLevel = 3;
  string message = 4;
  Metadata metadata = 5;
  Source source = 6;

  message Metadata {
  string requestId = 1;
  string clientIp = 2;
  string userAgent = 3;
  string requestMethod = 4;
  string requestPath = 5;
  int32 responseStatus = 6;
  double responseDuration = 7;
  map<string, string> extra = 8;
  }

  message Source {
  string host = 1;
  string service = 2;
  string environment = 3;
  map<string, string> extra = 4;
  }
}

// // LogLevel enum for consistent log levels
// enum LogLevel {
//   LOG_LEVEL_UNSPECIFIED = 0;
//   LOG_LEVEL_DEBUG = 1;
//   LOG_LEVEL_INFO = 2;
//   LOG_LEVEL_WARN = 3;
//   LOG_LEVEL_ERROR = 4;
//   LOG_LEVEL_FATAL = 5;

message LogRequest {
  LogInfo entry = 1;
}

// LogResponse represents a response to a log ingestion request
message LogResponse {
  bool success = 1;
  string message = 2;
}

// LoggingService defines the gRPC service
service LoggingService {
  rpc IngestLog(LogRequest) returns (LogResponse) {}
}
